{"ast":null,"code":"var _jsxFileName = \"/Users/hvx/Desktop/posted/client/src/components/posts/PostItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport { width } from '@material-ui/system';\nconst classes = makeStyles(theme => createStyles({\n  card: {\n    maxWidth: 345\n  },\n  media: {\n    height: 0,\n    paddingTop: '26.25%' // 16:9\n\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  },\n  avatar: {\n    backgroundColor: red[500],\n    margin: 10,\n    width: 80,\n    height: 80\n  }\n}));\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  },\n  showActions\n}) => React.createElement(\"div\", {\n  className: \"post \",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}, React.createElement(Card, {\n  className: classes.card,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}, React.createElement(CardHeader, {\n  avatar: React.createElement(Avatar, {\n    src: avatar,\n    \"aria-label\": \"recipe\",\n    className: classes.bigAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }),\n  action: React.createElement(Link, {\n    to: \"/profile/\".concat(user),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, name)),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}), React.createElement(CardContent, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  className: \"my-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n}, text)), React.createElement(CardActions, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  className: \"post-date\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78\n  },\n  __self: this\n}, \"Posted on \", React.createElement(Moment, {\n  format: \"YYYY/MM/DD\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79\n  },\n  __self: this\n}, date)), showActions && React.createElement(Fragment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83\n  },\n  __self: this\n}, React.createElement(\"button\", {\n  onClick: () => addLike(_id),\n  type: \"button\",\n  className: \"btn btn-light\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fas fa-thumbs-up\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89\n  },\n  __self: this\n}), ' ', React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90\n  },\n  __self: this\n}, likes.length > 0 && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90\n  },\n  __self: this\n}, likes.length))), React.createElement(\"button\", {\n  onClick: () => removeLike(_id),\n  type: \"button\",\n  className: \"btn btn-light\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fas fa-thumbs-down\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97\n  },\n  __self: this\n})), React.createElement(Link, {\n  to: \"/posts/\".concat(_id),\n  className: \"btn btn-primary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99\n  },\n  __self: this\n}, \"Discussion\", ' ', comments.length > 0 && React.createElement(\"span\", {\n  className: \"comment-count\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102\n  },\n  __self: this\n}, comments.length)), !auth.loading && user === auth.user._id && React.createElement(\"button\", {\n  onClick: () => deletePost(_id),\n  type: \"button\",\n  className: \"btn btn-danger\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fas fa-times\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111\n  },\n  __self: this\n})))))));\n\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  showActions: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);","map":{"version":3,"sources":["/Users/hvx/Desktop/posted/client/src/components/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","Moment","connect","addLike","removeLike","deletePost","makeStyles","Theme","createStyles","Card","CardHeader","CardMedia","CardContent","CardActions","Collapse","Avatar","IconButton","Typography","red","width","classes","theme","card","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","margin","PostItem","auth","post","_id","text","name","user","likes","comments","date","showActions","bigAvatar","length","loading","defaultProps","propTypes","object","isRequired","func","bool","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport Moment from 'react-moment'\nimport { connect } from 'react-redux'\nimport { addLike, removeLike, deletePost } from '../../actions/post'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\n\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Collapse from '@material-ui/core/Collapse'\nimport Avatar from '@material-ui/core/Avatar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport { red } from '@material-ui/core/colors'\nimport { width } from '@material-ui/system'\n\nconst classes = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      maxWidth: 345\n    },\n    media: {\n      height: 0,\n      paddingTop: '26.25%' // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)'\n    },\n    avatar: {\n      backgroundColor: red[500],\n      margin: 10,\n      width: 80,\n      height: 80\n    }\n  })\n)\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: { _id, text, name, avatar, user, likes, comments, date },\n  showActions\n}) => (\n  <div className=\"post \">\n    <Card className={classes.card}>\n      <CardHeader\n        avatar={\n          <Avatar\n            src={avatar}\n            aria-label=\"recipe\"\n            className={classes.bigAvatar}\n          />\n        }\n        action={\n          <Link to={`/profile/${user}`}>\n            <h6>{name}</h6>\n          </Link>\n        }\n      />\n      <CardContent>\n        <p className=\"my-1\">{text}</p>\n      </CardContent>\n      <CardActions>\n        <div>\n          <p className=\"post-date\">\n            Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\n          </p>\n\n          {showActions && (\n            <Fragment>\n              <button\n                onClick={() => addLike(_id)}\n                type=\"button\"\n                className=\"btn btn-light\"\n              >\n                <i className=\"fas fa-thumbs-up\" />{' '}\n                <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\n              </button>\n              <button\n                onClick={() => removeLike(_id)}\n                type=\"button\"\n                className=\"btn btn-light\"\n              >\n                <i className=\"fas fa-thumbs-down\" />\n              </button>\n              <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\n                Discussion{' '}\n                {comments.length > 0 && (\n                  <span className=\"comment-count\">{comments.length}</span>\n                )}\n              </Link>\n              {!auth.loading && user === auth.user._id && (\n                <button\n                  onClick={() => deletePost(_id)}\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                >\n                  <i className=\"fas fa-times\" />\n                </button>\n              )}\n            </Fragment>\n          )}\n        </div>\n      </CardActions>\n    </Card>\n  </div>\n)\n\nPostItem.defaultProps = {\n  showActions: true\n}\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  showActions: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n})\n\nexport default connect(\n  mapStateToProps,\n  { addLike, removeLike, deletePost }\n)(PostItem)\n"]},"metadata":{},"sourceType":"module"}