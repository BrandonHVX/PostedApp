{"ast":null,"code":"var _jsxFileName = \"/Users/hvx/Desktop/posted/client/src/components/posts/PostItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport { width } from '@material-ui/system';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport InsertCommentIcon from '@material-ui/icons/InsertComment';\nconst classes = makeStyles(theme => createStyles({\n  card: {\n    maxWidth: 345\n  },\n  media: {\n    height: 0,\n    paddingTop: '26.25%' // 16:9\n\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  },\n  avatar: {\n    backgroundColor: red[500],\n    margin: 10,\n    width: 10,\n    height: 10\n  },\n  bigAvatar: {\n    margin: 10,\n    width: 100,\n    height: 100\n  }\n}));\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  },\n  showActions\n}) => React.createElement(\"div\", {\n  className: \"post \",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76\n  },\n  __self: this\n}, React.createElement(Card, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77\n  },\n  __self: this\n}, ' ', React.createElement(\"div\", {\n  \"card-bg\": true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79\n  },\n  __self: this\n}), React.createElement(CardHeader, {\n  className: \"post-header\",\n  avatar: React.createElement(\"img\", {\n    src: avatar,\n    \"aria-label\": \"recipe\",\n    className: \"round-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }),\n  title: React.createElement(Link, {\n    to: \"/profile/\".concat(user),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, name),\n  action: !auth.loading && user === auth.user._id && React.createElement(\"a\", {\n    onClick: () => deletePost(_id),\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80\n  },\n  __self: this\n}), React.createElement(CardContent, {\n  className: \"post-card\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94\n  },\n  __self: this\n}, React.createElement(\"h6\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n}, text))), React.createElement(CardActions, {\n  className: \"actions\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  className: \"post-date\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100\n  },\n  __self: this\n}, \"Posted on \", React.createElement(Moment, {\n  format: \"YYYY/MM/DD\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101\n  },\n  __self: this\n}, date)), showActions && React.createElement(Fragment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105\n  },\n  __self: this\n}, React.createElement(IconButton, {\n  \"aria-label\": \"show 4 new mails\",\n  color: \"inherit\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106\n  },\n  __self: this\n}, React.createElement(Badge, {\n  badgeContent: likes.length > 0 && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, likes.length),\n  color: \"secondary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 107\n  },\n  __self: this\n}, ' ', React.createElement(FavoriteIcon, {\n  onClick: () => addLike(_id),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 112\n  },\n  __self: this\n}), ' ')), React.createElement(\"a\", {\n  onClick: () => removeLike(_id),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 115\n  },\n  __self: this\n}, \"unlike\"), React.createElement(Link, {\n  to: \"/posts/\".concat(_id),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 116\n  },\n  __self: this\n}, React.createElement(IconButton, {\n  \"aria-label\": \"show 4 new mails\",\n  color: \"inherit\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117\n  },\n  __self: this\n}, React.createElement(Badge, {\n  badgeContent: comments.length > 0 && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, comments.length),\n  color: \"secondary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118\n  },\n  __self: this\n}, React.createElement(InsertCommentIcon, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 124\n  },\n  __self: this\n})))), ' ')), ' ')));\n\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  showActions: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);","map":{"version":3,"sources":["/Users/hvx/Desktop/posted/client/src/components/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","Moment","connect","addLike","removeLike","deletePost","makeStyles","Theme","createStyles","Button","Card","CardHeader","CardMedia","CardContent","CardActions","Collapse","Avatar","IconButton","Typography","red","width","AppBar","Toolbar","InputBase","Badge","MenuItem","Menu","MenuIcon","SearchIcon","FavoriteIcon","MailIcon","NotificationsIcon","MoreIcon","InsertCommentIcon","classes","theme","card","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","margin","bigAvatar","PostItem","auth","post","_id","text","name","user","likes","comments","date","showActions","loading","length","defaultProps","propTypes","object","isRequired","func","bool","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport Moment from 'react-moment'\nimport { connect } from 'react-redux'\nimport { addLike, removeLike, deletePost } from '../../actions/post'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Collapse from '@material-ui/core/Collapse'\nimport Avatar from '@material-ui/core/Avatar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport { red } from '@material-ui/core/colors'\nimport { width } from '@material-ui/system'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\n\nimport InputBase from '@material-ui/core/InputBase'\nimport Badge from '@material-ui/core/Badge'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Menu from '@material-ui/core/Menu'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SearchIcon from '@material-ui/icons/Search'\nimport FavoriteIcon from '@material-ui/icons/Favorite'\nimport MailIcon from '@material-ui/icons/Mail'\nimport NotificationsIcon from '@material-ui/icons/Notifications'\nimport MoreIcon from '@material-ui/icons/MoreVert'\nimport InsertCommentIcon from '@material-ui/icons/InsertComment'\n\nconst classes = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      maxWidth: 345\n    },\n    media: {\n      height: 0,\n      paddingTop: '26.25%' // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)'\n    },\n    avatar: {\n      backgroundColor: red[500],\n      margin: 10,\n      width: 10,\n      height: 10\n    },\n    bigAvatar: {\n      margin: 10,\n      width: 100,\n      height: 100\n    }\n  })\n)\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: { _id, text, name, avatar, user, likes, comments, date },\n  showActions\n}) => (\n  <div className=\"post \">\n    <Card>\n      {' '}\n      <div card-bg />\n      <CardHeader\n        className=\"post-header\"\n        avatar={<img src={avatar} aria-label=\"recipe\" className=\"round-img\" />}\n        title={<Link to={`/profile/${user}`}>{name}</Link>}\n        action={\n          !auth.loading &&\n          user === auth.user._id && (\n            <a onClick={() => deletePost(_id)} type=\"button\">\n              <i className=\"fas fa-times\" />\n            </a>\n          )\n        }\n      />\n      <CardContent className=\"post-card\">\n        <p>\n          <h6>{text}</h6>\n        </p>\n      </CardContent>\n      <CardActions className=\"actions\">\n        <div>\n          <p className=\"post-date\">\n            Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\n          </p>\n\n          {showActions && (\n            <Fragment>\n              <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                <Badge\n                  badgeContent={likes.length > 0 && <span>{likes.length}</span>}\n                  color=\"secondary\"\n                >\n                  {' '}\n                  <FavoriteIcon onClick={() => addLike(_id)} />{' '}\n                </Badge>\n              </IconButton>\n              <a onClick={() => removeLike(_id)}>unlike</a>\n              <Link to={`/posts/${_id}`}>\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                  <Badge\n                    badgeContent={\n                      comments.length > 0 && <span>{comments.length}</span>\n                    }\n                    color=\"secondary\"\n                  >\n                    <InsertCommentIcon />\n                  </Badge>\n                </IconButton>\n              </Link>{' '}\n            </Fragment>\n          )}\n        </div>{' '}\n      </CardActions>\n    </Card>\n  </div>\n)\n\nPostItem.defaultProps = {\n  showActions: true\n}\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  showActions: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n})\n\nexport default connect(\n  mapStateToProps,\n  { addLike, removeLike, deletePost }\n)(PostItem)\n"]},"metadata":{},"sourceType":"module"}